[{"name":"abstract fun read(): Any?","description":"persistence.Serializer.read","location":"en-house-app/persistence/-serializer/read.html","searchKeys":["read","abstract fun read(): Any?","persistence.Serializer.read"]},{"name":"abstract fun write(obj: Any?)","description":"persistence.Serializer.write","location":"en-house-app/persistence/-serializer/write.html","searchKeys":["write","abstract fun write(obj: Any?)","persistence.Serializer.write"]},{"name":"class HouseAPI(serializerType: Serializer)","description":"controllers.HouseAPI","location":"en-house-app/controllers/-house-a-p-i/index.html","searchKeys":["HouseAPI","class HouseAPI(serializerType: Serializer)","controllers.HouseAPI"]},{"name":"class JSONSerializer(file: File) : Serializer","description":"persistence.JSONSerializer","location":"en-house-app/persistence/-j-s-o-n-serializer/index.html","searchKeys":["JSONSerializer","class JSONSerializer(file: File) : Serializer","persistence.JSONSerializer"]},{"name":"class XMLSerializer(file: File) : Serializer","description":"persistence.XMLSerializer","location":"en-house-app/persistence/-x-m-l-serializer/index.html","searchKeys":["XMLSerializer","class XMLSerializer(file: File) : Serializer","persistence.XMLSerializer"]},{"name":"class YAMLSerializer(file: File) : Serializer","description":"persistence.YAMLSerializer","location":"en-house-app/persistence/-y-a-m-l-serializer/index.html","searchKeys":["YAMLSerializer","class YAMLSerializer(file: File) : Serializer","persistence.YAMLSerializer"]},{"name":"data class House(houseCategory: String, houseCost: Double, houseLocation: String, isAvailableFrom: String, isSold: Boolean, numberOfBedrooms: Int, numberOfBathrooms: Double, houseSqFoot: Int)","description":"models.House","location":"en-house-app/models/-house/index.html","searchKeys":["House","data class House(houseCategory: String, houseCost: Double, houseLocation: String, isAvailableFrom: String, isSold: Boolean, numberOfBedrooms: Int, numberOfBathrooms: Double, houseSqFoot: Int)","models.House"]},{"name":"fun House(houseCategory: String, houseCost: Double, houseLocation: String, isAvailableFrom: String, isSold: Boolean, numberOfBedrooms: Int, numberOfBathrooms: Double, houseSqFoot: Int)","description":"models.House.House","location":"en-house-app/models/-house/-house.html","searchKeys":["House","fun House(houseCategory: String, houseCost: Double, houseLocation: String, isAvailableFrom: String, isSold: Boolean, numberOfBedrooms: Int, numberOfBathrooms: Double, houseSqFoot: Int)","models.House.House"]},{"name":"fun HouseAPI(serializerType: Serializer)","description":"controllers.HouseAPI.HouseAPI","location":"en-house-app/controllers/-house-a-p-i/-house-a-p-i.html","searchKeys":["HouseAPI","fun HouseAPI(serializerType: Serializer)","controllers.HouseAPI.HouseAPI"]},{"name":"fun JSONSerializer(file: File)","description":"persistence.JSONSerializer.JSONSerializer","location":"en-house-app/persistence/-j-s-o-n-serializer/-j-s-o-n-serializer.html","searchKeys":["JSONSerializer","fun JSONSerializer(file: File)","persistence.JSONSerializer.JSONSerializer"]},{"name":"fun XMLSerializer(file: File)","description":"persistence.XMLSerializer.XMLSerializer","location":"en-house-app/persistence/-x-m-l-serializer/-x-m-l-serializer.html","searchKeys":["XMLSerializer","fun XMLSerializer(file: File)","persistence.XMLSerializer.XMLSerializer"]},{"name":"fun YAMLSerializer(file: File)","description":"persistence.YAMLSerializer.YAMLSerializer","location":"en-house-app/persistence/-y-a-m-l-serializer/-y-a-m-l-serializer.html","searchKeys":["YAMLSerializer","fun YAMLSerializer(file: File)","persistence.YAMLSerializer.YAMLSerializer"]},{"name":"fun add(house: House): Boolean","description":"controllers.HouseAPI.add","location":"en-house-app/controllers/-house-a-p-i/add.html","searchKeys":["add","fun add(house: House): Boolean","controllers.HouseAPI.add"]},{"name":"fun addHouse()","description":".addHouse","location":"en-house-app/[root]/add-house.html","searchKeys":["addHouse","fun addHouse()",".addHouse"]},{"name":"fun deleteHouse()","description":".deleteHouse","location":"en-house-app/[root]/delete-house.html","searchKeys":["deleteHouse","fun deleteHouse()",".deleteHouse"]},{"name":"fun deleteHouse(indexToDelete: Int): House?","description":"controllers.HouseAPI.deleteHouse","location":"en-house-app/controllers/-house-a-p-i/delete-house.html","searchKeys":["deleteHouse","fun deleteHouse(indexToDelete: Int): House?","controllers.HouseAPI.deleteHouse"]},{"name":"fun exitApp()","description":".exitApp","location":"en-house-app/[root]/exit-app.html","searchKeys":["exitApp","fun exitApp()",".exitApp"]},{"name":"fun findHouse(index: Int): House?","description":"controllers.HouseAPI.findHouse","location":"en-house-app/controllers/-house-a-p-i/find-house.html","searchKeys":["findHouse","fun findHouse(index: Int): House?","controllers.HouseAPI.findHouse"]},{"name":"fun formatListString(housesToFormat: List<House>): String","description":"controllers.HouseAPI.formatListString","location":"en-house-app/controllers/-house-a-p-i/format-list-string.html","searchKeys":["formatListString","fun formatListString(housesToFormat: List<House>): String","controllers.HouseAPI.formatListString"]},{"name":"fun houseToBeSold()","description":".houseToBeSold","location":"en-house-app/[root]/house-to-be-sold.html","searchKeys":["houseToBeSold","fun houseToBeSold()",".houseToBeSold"]},{"name":"fun houseToBeSold(indexToSell: Int): Boolean","description":"controllers.HouseAPI.houseToBeSold","location":"en-house-app/controllers/-house-a-p-i/house-to-be-sold.html","searchKeys":["houseToBeSold","fun houseToBeSold(indexToSell: Int): Boolean","controllers.HouseAPI.houseToBeSold"]},{"name":"fun isValidCategory(categoryToCheck: String?): Boolean","description":"utilities.HouseUtilities.isValidCategory","location":"en-house-app/utilities/-house-utilities/is-valid-category.html","searchKeys":["isValidCategory","fun isValidCategory(categoryToCheck: String?): Boolean","utilities.HouseUtilities.isValidCategory"]},{"name":"fun isValidIndex(index: Int): Boolean","description":"utilities.HouseUtilities.isValidIndex","location":"en-house-app/utilities/-house-utilities/is-valid-index.html","searchKeys":["isValidIndex","fun isValidIndex(index: Int): Boolean","utilities.HouseUtilities.isValidIndex"]},{"name":"fun isValidListIndex(index: Int, list: List<Any>): Boolean","description":"utilities.HouseUtilities.isValidListIndex","location":"en-house-app/utilities/-house-utilities/is-valid-list-index.html","searchKeys":["isValidListIndex","fun isValidListIndex(index: Int, list: List<Any>): Boolean","utilities.HouseUtilities.isValidListIndex"]},{"name":"fun listAllHouses()","description":".listAllHouses","location":"en-house-app/[root]/list-all-houses.html","searchKeys":["listAllHouses","fun listAllHouses()",".listAllHouses"]},{"name":"fun listAllHouses(): String","description":"controllers.HouseAPI.listAllHouses","location":"en-house-app/controllers/-house-a-p-i/list-all-houses.html","searchKeys":["listAllHouses","fun listAllHouses(): String","controllers.HouseAPI.listAllHouses"]},{"name":"fun listHouses()","description":".listHouses","location":"en-house-app/[root]/list-houses.html","searchKeys":["listHouses","fun listHouses()",".listHouses"]},{"name":"fun listNotSoldHouses()","description":".listNotSoldHouses","location":"en-house-app/[root]/list-not-sold-houses.html","searchKeys":["listNotSoldHouses","fun listNotSoldHouses()",".listNotSoldHouses"]},{"name":"fun listNotSoldHouses(): String","description":"controllers.HouseAPI.listNotSoldHouses","location":"en-house-app/controllers/-house-a-p-i/list-not-sold-houses.html","searchKeys":["listNotSoldHouses","fun listNotSoldHouses(): String","controllers.HouseAPI.listNotSoldHouses"]},{"name":"fun listSoldHouses()","description":".listSoldHouses","location":"en-house-app/[root]/list-sold-houses.html","searchKeys":["listSoldHouses","fun listSoldHouses()",".listSoldHouses"]},{"name":"fun listSoldHouses(): String","description":"controllers.HouseAPI.listSoldHouses","location":"en-house-app/controllers/-house-a-p-i/list-sold-houses.html","searchKeys":["listSoldHouses","fun listSoldHouses(): String","controllers.HouseAPI.listSoldHouses"]},{"name":"fun load()","description":".load","location":"en-house-app/[root]/load.html","searchKeys":["load","fun load()",".load"]},{"name":"fun load()","description":"controllers.HouseAPI.load","location":"en-house-app/controllers/-house-a-p-i/load.html","searchKeys":["load","fun load()","controllers.HouseAPI.load"]},{"name":"fun main(args: Array<String>)","description":".main","location":"en-house-app/[root]/main.html","searchKeys":["main","fun main(args: Array<String>)",".main"]},{"name":"fun mainMenu(): Int","description":".mainMenu","location":"en-house-app/[root]/main-menu.html","searchKeys":["mainMenu","fun mainMenu(): Int",".mainMenu"]},{"name":"fun numberOfHouses(): Int","description":"controllers.HouseAPI.numberOfHouses","location":"en-house-app/controllers/-house-a-p-i/number-of-houses.html","searchKeys":["numberOfHouses","fun numberOfHouses(): Int","controllers.HouseAPI.numberOfHouses"]},{"name":"fun numberOfNotSoldHouses(): Int","description":"controllers.HouseAPI.numberOfNotSoldHouses","location":"en-house-app/controllers/-house-a-p-i/number-of-not-sold-houses.html","searchKeys":["numberOfNotSoldHouses","fun numberOfNotSoldHouses(): Int","controllers.HouseAPI.numberOfNotSoldHouses"]},{"name":"fun numberOfSoldHouses(): Int","description":"controllers.HouseAPI.numberOfSoldHouses","location":"en-house-app/controllers/-house-a-p-i/number-of-sold-houses.html","searchKeys":["numberOfSoldHouses","fun numberOfSoldHouses(): Int","controllers.HouseAPI.numberOfSoldHouses"]},{"name":"fun readNextChar(prompt: String?): Char","description":"utils.ScannerInput.readNextChar","location":"en-house-app/utils/-scanner-input/read-next-char.html","searchKeys":["readNextChar","fun readNextChar(prompt: String?): Char","utils.ScannerInput.readNextChar"]},{"name":"fun readNextDouble(prompt: String?): Double","description":"utils.ScannerInput.readNextDouble","location":"en-house-app/utils/-scanner-input/read-next-double.html","searchKeys":["readNextDouble","fun readNextDouble(prompt: String?): Double","utils.ScannerInput.readNextDouble"]},{"name":"fun readNextInt(prompt: String?): Int","description":"utils.ScannerInput.readNextInt","location":"en-house-app/utils/-scanner-input/read-next-int.html","searchKeys":["readNextInt","fun readNextInt(prompt: String?): Int","utils.ScannerInput.readNextInt"]},{"name":"fun readNextLine(prompt: String?): String","description":"utils.ScannerInput.readNextLine","location":"en-house-app/utils/-scanner-input/read-next-line.html","searchKeys":["readNextLine","fun readNextLine(prompt: String?): String","utils.ScannerInput.readNextLine"]},{"name":"fun runMenu()","description":".runMenu","location":"en-house-app/[root]/run-menu.html","searchKeys":["runMenu","fun runMenu()",".runMenu"]},{"name":"fun save()","description":".save","location":"en-house-app/[root]/save.html","searchKeys":["save","fun save()",".save"]},{"name":"fun searchByCategory(searchString: String): String","description":"controllers.HouseAPI.searchByCategory","location":"en-house-app/controllers/-house-a-p-i/search-by-category.html","searchKeys":["searchByCategory","fun searchByCategory(searchString: String): String","controllers.HouseAPI.searchByCategory"]},{"name":"fun searchHouses()","description":".searchHouses","location":"en-house-app/[root]/search-houses.html","searchKeys":["searchHouses","fun searchHouses()",".searchHouses"]},{"name":"fun store()","description":"controllers.HouseAPI.store","location":"en-house-app/controllers/-house-a-p-i/store.html","searchKeys":["store","fun store()","controllers.HouseAPI.store"]},{"name":"fun updateHouse()","description":".updateHouse","location":"en-house-app/[root]/update-house.html","searchKeys":["updateHouse","fun updateHouse()",".updateHouse"]},{"name":"fun updateHouse(indexToUpdate: Int, house: House?): Boolean","description":"controllers.HouseAPI.updateHouse","location":"en-house-app/controllers/-house-a-p-i/update-house.html","searchKeys":["updateHouse","fun updateHouse(indexToUpdate: Int, house: House?): Boolean","controllers.HouseAPI.updateHouse"]},{"name":"fun validRange(numberToCheck: Int, min: Int, max: Int): Boolean","description":"utilities.HouseUtilities.validRange","location":"en-house-app/utilities/-house-utilities/valid-range.html","searchKeys":["validRange","fun validRange(numberToCheck: Int, min: Int, max: Int): Boolean","utilities.HouseUtilities.validRange"]},{"name":"interface Serializer","description":"persistence.Serializer","location":"en-house-app/persistence/-serializer/index.html","searchKeys":["Serializer","interface Serializer","persistence.Serializer"]},{"name":"object HouseUtilities","description":"utilities.HouseUtilities","location":"en-house-app/utilities/-house-utilities/index.html","searchKeys":["HouseUtilities","object HouseUtilities","utilities.HouseUtilities"]},{"name":"object ScannerInput","description":"utils.ScannerInput","location":"en-house-app/utils/-scanner-input/index.html","searchKeys":["ScannerInput","object ScannerInput","utils.ScannerInput"]},{"name":"open override fun read(): Any","description":"persistence.JSONSerializer.read","location":"en-house-app/persistence/-j-s-o-n-serializer/read.html","searchKeys":["read","open override fun read(): Any","persistence.JSONSerializer.read"]},{"name":"open override fun read(): Any","description":"persistence.XMLSerializer.read","location":"en-house-app/persistence/-x-m-l-serializer/read.html","searchKeys":["read","open override fun read(): Any","persistence.XMLSerializer.read"]},{"name":"open override fun read(): Any","description":"persistence.YAMLSerializer.read","location":"en-house-app/persistence/-y-a-m-l-serializer/read.html","searchKeys":["read","open override fun read(): Any","persistence.YAMLSerializer.read"]},{"name":"open override fun write(obj: Any?)","description":"persistence.JSONSerializer.write","location":"en-house-app/persistence/-j-s-o-n-serializer/write.html","searchKeys":["write","open override fun write(obj: Any?)","persistence.JSONSerializer.write"]},{"name":"open override fun write(obj: Any?)","description":"persistence.XMLSerializer.write","location":"en-house-app/persistence/-x-m-l-serializer/write.html","searchKeys":["write","open override fun write(obj: Any?)","persistence.XMLSerializer.write"]},{"name":"open override fun write(obj: Any?)","description":"persistence.YAMLSerializer.write","location":"en-house-app/persistence/-y-a-m-l-serializer/write.html","searchKeys":["write","open override fun write(obj: Any?)","persistence.YAMLSerializer.write"]},{"name":"val categories: Set<String>","description":"utilities.HouseUtilities.categories","location":"en-house-app/utilities/-house-utilities/categories.html","searchKeys":["categories","val categories: Set<String>","utilities.HouseUtilities.categories"]},{"name":"var houseCategory: String","description":"models.House.houseCategory","location":"en-house-app/models/-house/house-category.html","searchKeys":["houseCategory","var houseCategory: String","models.House.houseCategory"]},{"name":"var houseCost: Double","description":"models.House.houseCost","location":"en-house-app/models/-house/house-cost.html","searchKeys":["houseCost","var houseCost: Double","models.House.houseCost"]},{"name":"var houseLocation: String","description":"models.House.houseLocation","location":"en-house-app/models/-house/house-location.html","searchKeys":["houseLocation","var houseLocation: String","models.House.houseLocation"]},{"name":"var houseSqFoot: Int","description":"models.House.houseSqFoot","location":"en-house-app/models/-house/house-sq-foot.html","searchKeys":["houseSqFoot","var houseSqFoot: Int","models.House.houseSqFoot"]},{"name":"var isAvailableFrom: String","description":"models.House.isAvailableFrom","location":"en-house-app/models/-house/is-available-from.html","searchKeys":["isAvailableFrom","var isAvailableFrom: String","models.House.isAvailableFrom"]},{"name":"var isSold: Boolean","description":"models.House.isSold","location":"en-house-app/models/-house/is-sold.html","searchKeys":["isSold","var isSold: Boolean","models.House.isSold"]},{"name":"var numberOfBathrooms: Double","description":"models.House.numberOfBathrooms","location":"en-house-app/models/-house/number-of-bathrooms.html","searchKeys":["numberOfBathrooms","var numberOfBathrooms: Double","models.House.numberOfBathrooms"]},{"name":"var numberOfBedrooms: Int","description":"models.House.numberOfBedrooms","location":"en-house-app/models/-house/number-of-bedrooms.html","searchKeys":["numberOfBedrooms","var numberOfBedrooms: Int","models.House.numberOfBedrooms"]}]
